{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/products/product-create/product-create.component.ts","webpack:///src/app/products/product-create/product-create.component.html","webpack:///src/app/products/product-details/product-details.component.ts","webpack:///src/app/products/product-details/product-details.component.html","webpack:///src/app/products/product-list/product-list.component.ts","webpack:///src/app/products/product-list/product-list.component.html","webpack:///src/app/services/product.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","http","title","posts","albums","userName","getDataByUsingSubscribe","get","pipe","users","subscribe","user","username","console","log","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","ProductCreateComponent","productService","product","name","category","color","unitPrice","availableQuantity","submitted","data","create","response","error","ProductDetailsComponent","ProductListComponent","currentProduct","currentIndex","first","rows","readProducts","readAll","products","index","deleteAll","searchByName","length","prev","reset","next","baseURL","ProductService","httpClient","post","put","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductDetailsComponent } from './products/product-details/product-details.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\n\n\nconst routes: Routes = [\n  { path:'', redirectTo:'products', pathMatch:'full'},\n  { path:'products', component:ProductListComponent },\n  { path: 'proucts/:id', component: ProductDetailsComponent },\n  { path: 'create', component:ProductCreateComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, mergeMap, take } from 'rxjs/operators';\nimport { forkJoin, of } from 'rxjs';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'DR S R Chandrashekhar Institute';\n\n  userName: string;\n  posts: Object;\n  albums: Object;\n  user: any;\n\n  constructor(private http: HttpClient) {\n    this.posts = [];\n    this.albums = [];\n    this.userName = 'XXX';\n  }\n\n  ngOnInit() {\n    this.getDataByUsingSubscribe();\n    // this.getDataByUsingMergeMap();\n    // this.getDataByUsingForkJoin();\n    //this.combine2Techniques();\n  }\n\n  getDataByUsingSubscribe() {\n    this.http.get('https://jsonplaceholder.typicode.com/users?username=Bret')\n    .pipe(\n      map( users => users[0]),\n      take(1)\n    )\n    .subscribe( user => {\n\n      this.userName = user.username;\n      console.log(\"User Name: \"+this.userName);\n      this.http.get(`https://jsonplaceholder.typicode.com/posts?userId=${user.id}`)\n      .subscribe( posts => {\n        this.posts = posts;\n        console.log(this.posts);\n      });\n\n      this.http.get(`https://jsonplaceholder.typicode.com/albums?userId=${user.id}`)\n      .subscribe( albums => {\n        this.albums = albums;\n        console.log(this.albums);\n      });\n    });\n  }\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a href=\"#\" class=\"navbar-brand\">Cambridge</a>\n    <div class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a routerLink=\"products\" class=\"nav-link\">Products</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"create\" class=\"nav-link\">Create</a>\n      </li>\n    </div>\n  </nav>\n\n  <div class=\"container mt-5\">\n  </div>\n</div>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductDetailsComponent } from './products/product-details/product-details.component';\nimport { ProductListComponent } from './products/product-list/product-list.component'\n\n\nimport {ButtonModule} from 'primeng/button';\nimport {TableModule} from 'primeng/table';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductCreateComponent,\n    ProductDetailsComponent,\n    ProductListComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ButtonModule,\n    TableModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service'\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.scss']\n})\nexport class ProductCreateComponent implements OnInit {\n\n  product = {\n    name: '',\n    category: '',\n    color: '',\n    unitPrice:'',\n    availableQuantity:''\n  };\n  submitted = false;\n\n\n  constructor(private productService: ProductService) { }\n\n\n  ngOnInit(): void {\n  }\n\n  createProduct(): void {\n    const data ={\n      name: this.product.name,\n      category: this.product.category,\n      color: this.product.color,\n      unitPrice: this.product.unitPrice,\n      availableQuantity: this.product.availableQuantity\n    };\n\n    this.productService.create(data).subscribe(response =>{\n      console.log(response);\n      this.submitted = true;\n    },\n    error=>{\n      console.log(error);\n    });\n  }\n\n  newProduct(): void {\n    this.submitted = false;\n    this.product = {\n      name: '',\n      category: '',\n      color: '',\n      unitPrice: '',\n      availableQuantity: ''\n    };\n  }\n}\n","<div style=\"width: 500px; margin: auto;\">\n  <div class=\"submit-form\">\n    <div *ngIf=\"!submitted\">\n      <div class=\"form-group\">\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\" required [(ngModel)]=\"product.name\"\n          name=\"name\"\n        />\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"category\">Category</label>\n        <input class=\"form-control\" id=\"category\"\n          required [(ngModel)]=\"product.category\" name=\"category\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"color\">Color</label>\n        <input class=\"form-control\" id=\"color\"\n          required [(ngModel)]=\"product.color\" name=\"color\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"unitPrice\">unitPrice</label>\n        <input class=\"form-control\" id=\"unitPrice\"\n          required [(ngModel)]=\"product.unitPrice\" name=\"unitPrice\"/>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"availableQuantity\">availableQuantity</label>\n        <input class=\"form-control\" id=\"availableQuantity\"\n          required [(ngModel)]=\"product.availableQuantity\" name=\"availableQuantity\"/>\n      </div>\n\n      <button (click)=\"createProduct()\" class=\"btn btn-success\">Create</button>\n    </div>\n\n    <div *ngIf=\"submitted\">\n      <h3>You successfully created a product!</h3>\n      <button class=\"btn btn-success\" (click)=\"newProduct()\">New..</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.scss']\n})\nexport class ProductDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>product-details works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service'\nimport {ButtonModule} from 'primeng/button';\nimport {TableModule} from 'primeng/table';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss']\n})\nexport class ProductListComponent implements OnInit {\n\n  products: any;\n  currentProduct = null;\n  currentIndex = -1;\n  name = '';\n\n  first = 0;\n\n  rows = 5;\n\n  constructor(private productService: ProductService) { }\n\n\n  ngOnInit(): void {\n    this.readProducts();\n  }\n\n  readProducts(): void {\n    this.productService.readAll()\n      .subscribe(\n        products => {\n          this.products = products;\n          console.log(products);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refresh(): void {\n    this.readProducts();\n    this.currentProduct = null;\n    this.currentIndex = -1;\n  }\n\n  setCurrentProduct(product, index): void {\n    this.currentProduct = product;\n    this.currentIndex = index;\n  }\n\n  deleteAllProducts(): void {\n    this.productService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.readProducts();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchByName(): void {\n    this.productService.searchByName(this.name)\n      .subscribe(\n        products => {\n          this.products = products;\n          console.log(products);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  next() {\n    this.first = this.first + this.rows;\n  }\n\n  prev() {\n    this.first = this.first - this.rows;\n  }\n\n  reset() {\n    this.first = 0;\n  }\n\n  isLastPage(): boolean {\n    return this.products ? this.first === (this.products.length - this.rows): true;\n}\n\nisFirstPage(): boolean {\n    return this.products ? this.first === 0 : true;\n}\n}\n","<!-- <div class=\"card\">\n  <h5>Implicit Pagination</h5>\n  <p-table [value]=\"products\">\n    <ng-template pTemplate=\"header\">\n      <tr>\n          <th>Product Name</th>\n          <th>Category</th>\n          <th>Color</th>\n          <th>Price</th>\n          <th>Available Quantity</th>\n      </tr>\n  </ng-template>\n  <ng-template pTemplate=\"body\" let-products>\n    <tr>\n        <td>{{products.name}}</td>\n        <td>{{products.category}}</td>\n        <td>{{products.color}}</td>\n        <td>{{products.unitPrice}}</td>\n        <td>{{products.availableQuantity}}</td>\n    </tr>\n</ng-template>\n  </p-table>\n</div> -->\n\n<div class=\"card\">\n  <h5>Programmatic Control</h5>\n  <div class=\"p-mb-3\">\n      <p-button type=\"button\" icon=\"pi pi-chevron-left\" (click)=\"prev()\" [disabled]=\"isFirstPage()\" styleClass=\"p-button-text\"></p-button>\n      <p-button type=\"button\" icon=\"pi pi-refresh\" (click)=\"reset()\" styleClass=\"p-button-text\"></p-button>\n      <p-button type=\"button\" icon=\"pi pi-chevron-right\" (click)=\"next()\" [disabled]=\"isLastPage()\" styleClass=\"p-button-text\"></p-button>\n  </div>\n  <p-table [value]=\"products\" [paginator]=\"true\" [rows]=\"rows\" [showCurrentPageReport]=\"true\" [(first)]=\"first\"\n      currentPageReportTemplate=\"Showing {first} to {last} of {totalRecords} entries\" [rowsPerPageOptions]=\"[5,10,15,20,50]\">\n      <ng-template pTemplate=\"header\">\n          <tr>\n            <th>Product Name</th>\n            <th>Category</th>\n            <th>Color</th>\n            <th>Price</th>\n            <th>Available Quantity</th>\n          </tr>\n      </ng-template>\n      <ng-template pTemplate=\"body\" let-products>\n          <tr>\n            <td>{{products.name}}</td>\n            <td>{{products.category}}</td>\n            <td>{{products.color}}</td>\n            <td>{{products.unitPrice}}</td>\n            <td>{{products.availableQuantity}}</td>\n          </tr>\n      </ng-template>\n  </p-table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst baseURL = 'https://localhost:44335/api/products';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  readAll(): Observable<any> {\n    return this.httpClient.get(baseURL);\n  }\n\n  read(id): Observable<any> {\n    return this.httpClient.get(`${baseURL}/${id}`);\n  }\n\n  create(data): Observable<any> {\n    return this.httpClient.post(baseURL, data);\n  }\n\n  update(id, data): Observable<any> {\n    return this.httpClient.put(`${baseURL}/${id}`, data);\n  }\n\n  delete(id): Observable<any> {\n    return this.httpClient.delete(`${baseURL}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.httpClient.delete(baseURL);\n  }\n\n  searchByName(name): Observable<any> {\n    return this.httpClient.get(`${baseURL}?name=${name}`);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}